source-file ~/.tmux/reset
# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-Space
unbind-key C-Space
bind-key C-Space send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi
unbind [
unbind p
unbind-key -T copy-mode-vi v
bind [ copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.
#ANSN bind -t vi-copy v begin-selection
#ANSN bind -t vi-copy y copy-selection
#ANSN bind -t vi-copy V rectangle-toggle
bind ] paste-buffer
bind -t vi-copy Escape cancel

# mouse behavior
 setw -g mouse on
# sane scrolling:
 bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
#bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window -c "#{pane_current_path}"
bind-key t next-window
bind-key T previous-window

#ANSN bind-key [ copy-mode
#ANSN bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -t vi-copy y copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard"

set-window-option -g display-panes-time 1500
set-window-option -g display-panes-date 1400

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Status Bar solarized-dark (default)
set-option -g status-bg yellow
set-option -g pane-active-border-fg yellow
set-option -g pane-border-fg cyan

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

bind-key F7 prefix [

# Allow the arrow key to be used immediately after changing windows
#set-option -g repeat-time 0
#Trial

# Allow option to set current path in tmux pane
set-window-option -g window-status-current-format '#[fg=white,bold]** #{window_index} #[fg=green]#{pane_current_command} #[fg=white,bold]**#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]**|'
set-window-option -g window-status-format '#[fg=white,bold]#{window_index} #[fg=green]#{pane_current_command} #(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) |'

# More History
set -g history-limit 100000

# Copy from tmux buffer to system buffer(clipboard)
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# fzf plugin
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'laktak/etrakto'

# # should always be at the end
# run -b '~/.tmux/plugins/tpm/tpm'
#set-window-option -g utf8
#set -as terminal-overrides ',*:Tc'

# Last resort
# set -g default-terminal "screen-256color"
# set -ag terminal-overrides ",xterm-256color:Tc"
#set -g default-shell /bin/bash
#set-option -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g default-terminal screen-256color
#set -ag terminal-overrides ",xterm-256color:Tc"
